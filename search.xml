<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>广东信息学冬令营2024匹配</title>
      <link href="/2024/01/22/GDKOI2024S%E5%8C%B9%E9%85%8D/"/>
      <url>/2024/01/22/GDKOI2024S%E5%8C%B9%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P10080">题目传送门</a></p><h2 id="思路">思路</h2><p>首先我们先找一个最大匹配，如果有点无法匹配那么答案显然是 $-1$。</p><p>接着我们统计最大匹配中黑边的出现次数，若为偶数，直接输出，否则考虑调整。</p><p>若本来的匹配是 $(1,5),(2,6),(3,4)$，现在我们要将匹配转化成 $(1,4),(2,5),(3,6)$，那么考虑按如下方式连边：</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/b877b0fe.png" alt=""></p><p>不难发现此时连成了一个环。</p><p>也就是说，如果我们按照“所有在最大匹配里的边左部点连到右部点，不在最大匹配里的边右部点连到左部点”的方式建出有向图，那么这张图上的环与调整方案一一对应。</p><p>同时，我们给每条边赋上颜色，边的颜色为这条边原先对应的那条无向边的颜色。</p><p>那么只要这张图存在一个奇环（出现了奇数次黑边的环），那么调整环上的匹配方案即可令答案合法。</p><p>暴力找环即可，时间复杂度 $\mathcal O(nm)$。</p><h2 id="代码">代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//A tree without skin will surely die.</span></span><br><span class="line"><span class="comment">//A man without face is invincible.</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rep(i,j,k) for(int i=j;i&lt;=k;++i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> per(i,j,k) for(int i=j;i&gt;=k;--i)</span></span><br><span class="line"><span class="type">int</span> <span class="type">const</span> N=<span class="number">1e3</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n,m,vis[N],dep[N],pre[N],matched[N],b[N][N],id[N][N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;a[N];vector&lt; pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; &gt;c[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">bool</span> <span class="title">Hungary</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> co)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> v:a[x])&#123;</span><br><span class="line"><span class="keyword">if</span> (vis[v]==co) <span class="keyword">continue</span>;</span><br><span class="line">vis[v]=co;</span><br><span class="line"><span class="keyword">if</span> (!matched[v] || <span class="built_in">Hungary</span>(matched[v],co)) <span class="keyword">return</span> matched[v]=x,<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">vis[x]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i:c[x])&#123;</span><br><span class="line"><span class="type">int</span> v=i.first,w=i.second;</span><br><span class="line"><span class="keyword">if</span> (!vis[v]) dep[v]=dep[x]+w,pre[v]=x,<span class="built_in">dfs</span>(v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,<span class="number">2</span>*n) a[i].<span class="built_in">clear</span>(),matched[i]=vis[i]=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,<span class="number">2</span>*n) <span class="built_in">rep</span>(j,<span class="number">1</span>,<span class="number">2</span>*n) b[i][j]=<span class="number">-1</span>;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,m)&#123;</span><br><span class="line"><span class="type">int</span> u,v,c;cin&gt;&gt;u&gt;&gt;v&gt;&gt;c;</span><br><span class="line">a[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">b[u][v]=b[v][u]=c;</span><br><span class="line">id[u][v]=id[v][u]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">Hungary</span>(i,i)) <span class="keyword">return</span> cout&lt;&lt;<span class="string">&quot;-1\n&quot;</span>,<span class="built_in">void</span>();</span><br><span class="line"><span class="type">int</span> w=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">rep</span>(i,n+<span class="number">1</span>,<span class="number">2</span>*n) w+=b[i][matched[i]];</span><br><span class="line"><span class="keyword">if</span> (!(w&amp;<span class="number">1</span>))&#123;</span><br><span class="line"><span class="built_in">rep</span>(i,n+<span class="number">1</span>,<span class="number">2</span>*n) cout&lt;&lt;id[i][matched[i]]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,<span class="number">2</span>*n) c[i].<span class="built_in">clear</span>();</span><br><span class="line"><span class="built_in">rep</span>(i,n+<span class="number">1</span>,n+n) c[matched[i]].<span class="built_in">push_back</span>(&#123;i,b[i][matched[i]]&#125;);</span><br><span class="line"><span class="built_in">rep</span>(i,n+<span class="number">1</span>,n+n) <span class="built_in">rep</span>(j,<span class="number">1</span>,n)</span><br><span class="line"><span class="keyword">if</span> (j!=matched[i] &amp;&amp; b[i][j]!=<span class="number">-1</span>) c[i].<span class="built_in">push_back</span>(&#123;j,b[i][j]&#125;);</span><br><span class="line"><span class="built_in">rep</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line"><span class="built_in">rep</span>(j,<span class="number">1</span>,n+n) vis[j]=dep[j]=pre[j]=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> tag=<span class="number">0</span>;<span class="built_in">dfs</span>(i);</span><br><span class="line"><span class="built_in">rep</span>(x,<span class="number">1</span>,n+n)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> s:c[x])&#123;</span><br><span class="line"><span class="type">int</span> v=s.first,w=s.second;</span><br><span class="line"><span class="keyword">if</span> (v!=i) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (!vis[x]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> ((dep[x]-dep[v]+w)&amp;<span class="number">1</span>)&#123;tag=x;<span class="keyword">break</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tag)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> nw=tag;nw!=i;nw=pre[nw])&#123;</span><br><span class="line"><span class="type">int</span> k=pre[nw];</span><br><span class="line"><span class="keyword">if</span> (k&gt;n) matched[k]=nw;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tag&gt;n) matched[tag]=i;</span><br><span class="line"><span class="built_in">rep</span>(i,n+<span class="number">1</span>,<span class="number">2</span>*n) cout&lt;&lt;id[i][matched[i]]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;-1\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line"><span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">cin&gt;&gt;t;</span><br><span class="line"><span class="keyword">while</span> (t--) <span class="built_in">solve</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP2023 游记</title>
      <link href="/2024/01/21/CSP2023%E6%B8%B8%E8%AE%B0/"/>
      <url>/2024/01/21/CSP2023%E6%B8%B8%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>初赛模拟赛<strong>质量</strong>单调递增，<strong>质量</strong>单调递减。</p><p>感觉做这么多模拟赛的唯一用处就是考试时不管看到什么阴间题都不觉得惊讶了。</p><h2 id="初赛">初赛</h2><p>和 $\rm wsjf$，$\rm shaber\ MK$，$\rm lanos$ 一个考场。</p><p>进场之前 $\rm MK$ 说我如果过初赛他就没丁。</p><p>看试卷，发现非常傻逼，又发现监考老师坐在我旁边，【】吓断了。</p><p>选择题用时 $20 \min$，一切顺利。</p><p>阅读程序也感觉非常傻逼，$\rm T1$ 随便模拟了一下，$\rm T2$ 大概想了一下，发现 $\verb!solve1!$ 跟 $\verb!solve2!$ 的功能是一样的，问题是复杂度是啥呢，复杂度大概是 $\sum f(i)$，$f(i)$ 表示 $i$ 的质因子次数之和，毛估估是 $\mathcal O(n \log n)$ 的（其实是 $\mathcal O(n \log \log n)$，小丑了），$\rm T3$ 是原题，但是错了两个选择题，再次小丑。</p><p>完善程序感觉更傻逼了，$\rm T1$ 花了 $5 \min$，$\rm T2$ 花了 $5 \min$。</p><p>还剩下四十多分钟，以为自己 $\rm AK$ 了，不管怎么样 $90$ 分肯定有，于是开始摸鱼。</p><p>出考场 $\rm shaber\ MK$ 说这把分数线必然 $90+$。</p><p>回家一对答案，【】吓断了，$80.5$，有道小傻逼上卡线过初赛。</p><p>这下是真的过不了初赛了，$\rm MK$ 的丁看来保住了。</p><p>绷不住了，这居然还能比分数线高了 $30$ 分，$\rm MK$ 欠我一个丁。</p><h2 id="复赛前">复赛前</h2><p>妈妈生的，模拟赛天天爆蛋。</p><p>前面几场比较简单，大多都能 $300+$，甚至还让我 $\rm AK$ 了一场。</p><p>后面随着题目越来越马桶，就爆蛋起来了，每天挂 $100$ 分以上。</p><p>打洛谷提高模拟赛，别人 $\rm T3$ 的 $n^4$ 能 $80+$，只有我跟暴搜一个分。</p><p>最终 $rk22$，差一名拿到奖品，绷不住了。</p><p>$\rm CSP$ 前一天晚上还在启动雀魂。</p><p>打了一把累计役满，但是铳了很多。</p><h2 id="复赛">复赛</h2><p>$\rm CSP$ 当天上午依然在启动雀魂。</p><p>打了几个板子，但是都没用上。</p><p>在大巴上睡了一会，感觉状态还行。</p><p>开场先看了一遍所有题目，发现 $\rm T3$ 题目很长，还是个 $\rm J$ 组风格的大模拟，【】吓断了。</p><p>然后顺序开题，$\rm T1$ 比较顺利。</p><p>$\rm T2$ 稍微想了一会儿。</p><p>贪心地考虑，发现跟 $i$ 匹配的 $j$ 是固定的。</p><p>$j$ 可以用类似子序列自动机的方式求出。</p><p>然后设 $f_i$ 表示以 $i$ 为结尾的合法串个数，直接转移就行了。</p><p>$30 \min$ 写完。</p><p>然后给前两题写了个拍。</p><p>$\rm T3$ 直接模拟，调到结束前 $1.5h$。</p><p>$\rm T4$ 看到就会了，写了个双 $\log$，大样例一遍过。</p><p>但是 $\rm 18:20$ 发现 $\rm T4$ 有个地方写假了，是小问题，来不及改了，弃疗。</p><p>估了一下分大概是 $300$ 出头。</p><p>自闭了，大家都 $\rm AK$ 了。</p><p>希望吸吸爱抚的数据水点。</p><p>官方数据 $100+100+70+75=345$。</p><p>爆蛋了，回家学文化课了。</p><p>$\verb!upd:!$ $\rm NOIP$ 准考证号居然与神 $\rm huzhaoyang$ 去年的相同，神保佑我上队线。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NOIP2023 退役记</title>
      <link href="/2024/01/21/NOIP2023%E9%80%80%E5%BD%B9%E8%AE%B0/"/>
      <url>/2024/01/21/NOIP2023%E9%80%80%E5%BD%B9%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>省流：爆单了。</p><h2 id="rm-Day-0">$\rm Day\ 0$</h2><p>中午感觉身体发冷，有一种不详的预感。</p><p>下午润去看病，好像寄了。</p><p>做了甲流的检测，不过好像要考 $\rm NOIP$ 时才能出结果。</p><p>吃了退烧药，但还是 $\rm 38$ 度多。</p><p>没有胃口吃晚饭。</p><p>晚上到了杭州稍微好了一点，喝了一点粥。</p><h2 id="rm-Day-1">$\rm Day\ 1$</h2><p>早上一测温度还是 $38$ 度多，非常害怕，不过感觉上还是比昨天晚上好些。</p><p>出去吃早饭吹了吹风，体温低了一点，变成 $37$ 度多，不过脑子还是很糊，裹了好几层出发去考场了。</p><p><strong>不管怎么样，$\rm NOIP2023$，启动！</strong></p><p><strong>这次目标就是求稳，把傻逼分都写了，不挂就是胜利！</strong></p><p>进考场，感觉还行啊。</p><p>先开题吧，读了一遍 $\rm T1$，发现傻逼题。</p><p>然后翻了翻后面三题，感觉有点问号。</p><p>领到草稿纸后从 $\rm T2$ 开始开，一开始不太会，在纸上画了 $5 \min$ 就发现这是个傻逼题，建图跑类似二分图染色就行了，而且极其好写。</p><p>这时候大概 $200$ 了，先把前两题打了。</p><p>在开始写 $\rm T1$ 的时候发现我不管咋做都要带个 $\log$？不管了，先写再说，$0.3s$ 过了大样例，大概是能过，求稳写了个拍。</p><p>然后写 $\rm T2$，由于烧了脑子不太清楚所以写了大概 $30 \min$，过了小样例就把所有大样例都过了，但是大样例很弱啊，求稳写了个拍。</p><p>大概过了 $1h$，接下来开 $\rm T3$！</p><p>理解完题意之后发现这好像直接做就行了，双指针扫一遍就结束了。</p><p>但是联赛 $\rm T3$ 真的这么简单吗，先写个暴力再说。</p><p>把所有能过的大样例都过了，好像很对。</p><p>求稳证明了一下做法，发现很对啊，联赛 $\rm T3$ 真的只有这么点水平？</p><p>把暴力扫指针改成二分和 $\rm ST$ 表就能简单做到 $\mathcal O(nq \log n)$。</p><p>跑了一下最大样例，正确性没问题，但是跑了 $8s$！</p><p>发现自己开着两个对拍，把对拍都关了，还是跑了 $4s$！</p><p>然后一直在想怎么去掉 $\log$，但是去不掉（赛后发现可以推更强的结论然后单调栈做）。</p><p>把倍增数组的两维反了过来，$1.2s$！</p><p>加一点玄学剪枝，$0.9s$！</p><p>测了一下 $5 \times 10^5$ 的极限数据，$1.7s$！</p><p>对比了一下考场机子和 $\rm CCF$ 机子，确信我能过，然后就去开 $\rm T4$ 了。</p><p>这时候又烧到 $38$ 度了，先写点傻逼分吧。</p><p>写了最最简单的 $44$ 分暴力，但是花了 $1h$，主要是一直在调，在烧的时候调题有点困难。</p><p>然后发现扫描一下然后上个数据结构就做完了，好像也没啥水平啊？？？？？？</p><p>但是只有 $1h$ 了，如果没烧还可以冲一把，但是烧了，必然写不完。</p><p>在神游状态下拼上了 $\rm B$ 性质。</p><p>最后 $30 \min$ 检查了好几遍文件，大概是不会有问题了。</p><p>期望得分 $100+100+100+52=352$。</p><p>出场发现大家都 $\rm AK$ 了，然后发现 $\rm T4$ 暴力有地方没开 $\rm long\ long$！</p><p>心肺骤停，很多地方都挂成 $8$ 分了。</p><p>正式成绩 $100+100+75+32=307$。</p><p>$\rm T3$ 最终还是被卡了，$\rm T4$ 给我多过了几个点，感恩。</p><p>虽然打的很烂，但是由于是发烧状态下打的，这个结果还是能接受的。</p><p><strong>出场后大家都说 $\rm T3$ 是赛前最后一场模拟赛的 $\rm T3$？我怎么完全没发现？</strong></p><p><strong>还是逃不过每场比赛必挂分的铁律啊！</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于我</title>
      <link href="/2024/01/20/%E5%85%B3%E4%BA%8E%E6%88%91/"/>
      <url>/2024/01/20/%E5%85%B3%E4%BA%8E%E6%88%91/</url>
      
        <content type="html"><![CDATA[<p>$\text{from}$ $\text{ZJ-SX}$，菜寄高一 $\text{OIer}$。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
