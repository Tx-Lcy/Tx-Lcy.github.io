<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>广东信息学冬令营2024匹配</title>
      <link href="/2024/01/22/GDKOI2024S%E5%8C%B9%E9%85%8D/"/>
      <url>/2024/01/22/GDKOI2024S%E5%8C%B9%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P10080">题目传送门</a></p><h2 id="思路">思路</h2><p>首先我们先找一个最大匹配，如果有点无法匹配那么答案显然是 $-1$。</p><p>接着我们统计最大匹配中黑边的出现次数，若为偶数，直接输出，否则考虑调整。</p><p>若本来的匹配是 $(1,5),(2,6),(3,4)$，现在我们要将匹配转化成 $(1,4),(2,5),(3,6)$，那么考虑按如下方式连边：</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/b877b0fe.png" alt=""></p><p>不难发现此时连成了一个环。</p><p>也就是说，如果我们按照“所有在最大匹配里的边左部点连到右部点，不在最大匹配里的边右部点连到左部点”的方式建出有向图，那么这张图上的环与调整方案一一对应。</p><p>同时，我们给每条边赋上颜色，边的颜色为这条边原先对应的那条无向边的颜色。</p><p>那么只要这张图存在一个奇环（出现了奇数次黑边的环），那么调整环上的匹配方案即可令答案合法。</p><p>暴力找环即可，时间复杂度 $\mathcal O(nm)$。</p><h2 id="代码">代码</h2><pre><code class="language-cpp">//A tree without skin will surely die.//A man without face is invincible.#include&lt;bits/stdc++.h&gt;using namespace std;#define rep(i,j,k) for(int i=j;i&lt;=k;++i)#define per(i,j,k) for(int i=j;i&gt;=k;--i)int const N=1e3+10;int n,m,vis[N],dep[N],pre[N],matched[N],b[N][N],id[N][N];vector&lt;int&gt;a[N];vector&lt; pair&lt;int,int&gt; &gt;c[N];inline bool Hungary(int x,int co)&#123;for (auto v:a[x])&#123;if (vis[v]==co) continue;vis[v]=co;if (!matched[v] || Hungary(matched[v],co)) return matched[v]=x,1;&#125;return 0;&#125;inline void dfs(int x)&#123;vis[x]=1;for (auto i:c[x])&#123;int v=i.first,w=i.second;if (!vis[v]) dep[v]=dep[x]+w,pre[v]=x,dfs(v);&#125;&#125;void solve()&#123;cin&gt;&gt;n&gt;&gt;m;rep(i,1,2*n) a[i].clear(),matched[i]=vis[i]=0;rep(i,1,2*n) rep(j,1,2*n) b[i][j]=-1;rep(i,1,m)&#123;int u,v,c;cin&gt;&gt;u&gt;&gt;v&gt;&gt;c;a[u].push_back(v);b[u][v]=b[v][u]=c;id[u][v]=id[v][u]=i;&#125;rep(i,1,n)if (!Hungary(i,i)) return cout&lt;&lt;&quot;-1\n&quot;,void();int w=0;rep(i,n+1,2*n) w+=b[i][matched[i]];if (!(w&amp;1))&#123;rep(i,n+1,2*n) cout&lt;&lt;id[i][matched[i]]&lt;&lt;' ';cout&lt;&lt;'\n';return;&#125;rep(i,1,2*n) c[i].clear();rep(i,n+1,n+n) c[matched[i]].push_back(&#123;i,b[i][matched[i]]&#125;);rep(i,n+1,n+n) rep(j,1,n)if (j!=matched[i] &amp;&amp; b[i][j]!=-1) c[i].push_back(&#123;j,b[i][j]&#125;);rep(i,1,n)&#123;rep(j,1,n+n) vis[j]=dep[j]=pre[j]=0;int tag=0;dfs(i);rep(x,1,n+n)for (auto s:c[x])&#123;int v=s.first,w=s.second;if (v!=i) continue;if (!vis[x]) continue;if ((dep[x]-dep[v]+w)&amp;1)&#123;tag=x;break;&#125;&#125;if (tag)&#123;for (int nw=tag;nw!=i;nw=pre[nw])&#123;int k=pre[nw];if (k&gt;n) matched[k]=nw;&#125;if (tag&gt;n) matched[tag]=i;rep(i,n+1,2*n) cout&lt;&lt;id[i][matched[i]]&lt;&lt;' ';cout&lt;&lt;'\n';return;&#125;&#125;cout&lt;&lt;&quot;-1\n&quot;;&#125;signed main()&#123;ios::sync_with_stdio(false);cin.tie(0),cout.tie(0);int t=1;cin&gt;&gt;t;while (t--) solve();return 0;&#125;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP2023 游记</title>
      <link href="/2024/01/21/CSP2023%E6%B8%B8%E8%AE%B0/"/>
      <url>/2024/01/21/CSP2023%E6%B8%B8%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>初赛模拟赛<strong>质量</strong>单调递增，<strong>质量</strong>单调递减。</p><p>感觉做这么多模拟赛的唯一用处就是考试时不管看到什么阴间题都不觉得惊讶了。</p><h2 id="初赛">初赛</h2><p>和 $\rm wsjf$，$\rm shaber\ MK$，$\rm lanos$ 一个考场。</p><p>进场之前 $\rm MK$ 说我如果过初赛他就没丁。</p><p>看试卷，发现非常傻逼，又发现监考老师坐在我旁边，【】吓断了。</p><p>选择题用时 $20 \min$，一切顺利。</p><p>阅读程序也感觉非常傻逼，$\rm T1$ 随便模拟了一下，$\rm T2$ 大概想了一下，发现 $\verb!solve1!$ 跟 $\verb!solve2!$ 的功能是一样的，问题是复杂度是啥呢，复杂度大概是 $\sum f(i)$，$f(i)$ 表示 $i$ 的质因子次数之和，毛估估是 $\mathcal O(n \log n)$ 的（其实是 $\mathcal O(n \log \log n)$，小丑了），$\rm T3$ 是原题，但是错了两个选择题，再次小丑。</p><p>完善程序感觉更傻逼了，$\rm T1$ 花了 $5 \min$，$\rm T2$ 花了 $5 \min$。</p><p>还剩下四十多分钟，以为自己 $\rm AK$ 了，不管怎么样 $90$ 分肯定有，于是开始摸鱼。</p><p>出考场 $\rm shaber\ MK$ 说这把分数线必然 $90+$。</p><p>回家一对答案，【】吓断了，$80.5$，有道小傻逼上卡线过初赛。</p><p>这下是真的过不了初赛了，$\rm MK$ 的丁看来保住了。</p><p>绷不住了，这居然还能比分数线高了 $30$ 分，$\rm MK$ 欠我一个丁。</p><h2 id="复赛前">复赛前</h2><p>妈妈生的，模拟赛天天爆蛋。</p><p>前面几场比较简单，大多都能 $300+$，甚至还让我 $\rm AK$ 了一场。</p><p>后面随着题目越来越马桶，就爆蛋起来了，每天挂 $100$ 分以上。</p><p>打洛谷提高模拟赛，别人 $\rm T3$ 的 $n^4$ 能 $80+$，只有我跟暴搜一个分。</p><p>最终 $rk22$，差一名拿到奖品，绷不住了。</p><p>$\rm CSP$ 前一天晚上还在启动雀魂。</p><p>打了一把累计役满，但是铳了很多。</p><h2 id="复赛">复赛</h2><p>$\rm CSP$ 当天上午依然在启动雀魂。</p><p>打了几个板子，但是都没用上。</p><p>在大巴上睡了一会，感觉状态还行。</p><p>开场先看了一遍所有题目，发现 $\rm T3$ 题目很长，还是个 $\rm J$ 组风格的大模拟，【】吓断了。</p><p>然后顺序开题，$\rm T1$ 比较顺利。</p><p>$\rm T2$ 稍微想了一会儿。</p><p>贪心地考虑，发现跟 $i$ 匹配的 $j$ 是固定的。</p><p>$j$ 可以用类似子序列自动机的方式求出。</p><p>然后设 $f_i$ 表示以 $i$ 为结尾的合法串个数，直接转移就行了。</p><p>$30 \min$ 写完。</p><p>然后给前两题写了个拍。</p><p>$\rm T3$ 直接模拟，调到结束前 $1.5h$。</p><p>$\rm T4$ 看到就会了，写了个双 $\log$，大样例一遍过。</p><p>但是 $\rm 18:20$ 发现 $\rm T4$ 有个地方写假了，是小问题，来不及改了，弃疗。</p><p>估了一下分大概是 $300$ 出头。</p><p>自闭了，大家都 $\rm AK$ 了。</p><p>希望吸吸爱抚的数据水点。</p><p>官方数据 $100+100+70+75=345$。</p><p>爆蛋了，回家学文化课了。</p><p>$\verb!upd:!$ $\rm NOIP$ 准考证号居然与神 $\rm huzhaoyang$ 去年的相同，神保佑我上队线。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NOIP2023 退役记</title>
      <link href="/2024/01/21/NOIP2023%E9%80%80%E5%BD%B9%E8%AE%B0/"/>
      <url>/2024/01/21/NOIP2023%E9%80%80%E5%BD%B9%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>省流：爆单了。</p><h2 id="rm-Day-0">$\rm Day\ 0$</h2><p>中午感觉身体发冷，有一种不详的预感。</p><p>下午润去看病，好像寄了。</p><p>做了甲流的检测，不过好像要考 $\rm NOIP$ 时才能出结果。</p><p>吃了退烧药，但还是 $\rm 38$ 度多。</p><p>没有胃口吃晚饭。</p><p>晚上到了杭州稍微好了一点，喝了一点粥。</p><h2 id="rm-Day-1">$\rm Day\ 1$</h2><p>早上一测温度还是 $38$ 度多，非常害怕，不过感觉上还是比昨天晚上好些。</p><p>出去吃早饭吹了吹风，体温低了一点，变成 $37$ 度多，不过脑子还是很糊，裹了好几层出发去考场了。</p><p><strong>不管怎么样，$\rm NOIP2023$，启动！</strong></p><p><strong>这次目标就是求稳，把傻逼分都写了，不挂就是胜利！</strong></p><p>进考场，感觉还行啊。</p><p>先开题吧，读了一遍 $\rm T1$，发现傻逼题。</p><p>然后翻了翻后面三题，感觉有点问号。</p><p>领到草稿纸后从 $\rm T2$ 开始开，一开始不太会，在纸上画了 $5 \min$ 就发现这是个傻逼题，建图跑类似二分图染色就行了，而且极其好写。</p><p>这时候大概 $200$ 了，先把前两题打了。</p><p>在开始写 $\rm T1$ 的时候发现我不管咋做都要带个 $\log$？不管了，先写再说，$0.3s$ 过了大样例，大概是能过，求稳写了个拍。</p><p>然后写 $\rm T2$，由于烧了脑子不太清楚所以写了大概 $30 \min$，过了小样例就把所有大样例都过了，但是大样例很弱啊，求稳写了个拍。</p><p>大概过了 $1h$，接下来开 $\rm T3$！</p><p>理解完题意之后发现这好像直接做就行了，双指针扫一遍就结束了。</p><p>但是联赛 $\rm T3$ 真的这么简单吗，先写个暴力再说。</p><p>把所有能过的大样例都过了，好像很对。</p><p>求稳证明了一下做法，发现很对啊，联赛 $\rm T3$ 真的只有这么点水平？</p><p>把暴力扫指针改成二分和 $\rm ST$ 表就能简单做到 $\mathcal O(nq \log n)$。</p><p>跑了一下最大样例，正确性没问题，但是跑了 $8s$！</p><p>发现自己开着两个对拍，把对拍都关了，还是跑了 $4s$！</p><p>然后一直在想怎么去掉 $\log$，但是去不掉（赛后发现可以推更强的结论然后单调栈做）。</p><p>把倍增数组的两维反了过来，$1.2s$！</p><p>加一点玄学剪枝，$0.9s$！</p><p>测了一下 $5 \times 10^5$ 的极限数据，$1.7s$！</p><p>对比了一下考场机子和 $\rm CCF$ 机子，确信我能过，然后就去开 $\rm T4$ 了。</p><p>这时候又烧到 $38$ 度了，先写点傻逼分吧。</p><p>写了最最简单的 $44$ 分暴力，但是花了 $1h$，主要是一直在调，在烧的时候调题有点困难。</p><p>然后发现扫描一下然后上个数据结构就做完了，好像也没啥水平啊？？？？？？</p><p>但是只有 $1h$ 了，如果没烧还可以冲一把，但是烧了，必然写不完。</p><p>在神游状态下拼上了 $\rm B$ 性质。</p><p>最后 $30 \min$ 检查了好几遍文件，大概是不会有问题了。</p><p>期望得分 $100+100+100+52=352$。</p><p>出场发现大家都 $\rm AK$ 了，然后发现 $\rm T4$ 暴力有地方没开 $\rm long\ long$！</p><p>心肺骤停，很多地方都挂成 $8$ 分了。</p><p>正式成绩 $100+100+75+32=307$。</p><p>$\rm T3$ 最终还是被卡了，$\rm T4$ 给我多过了几个点，感恩。</p><p>虽然打的很烂，但是由于是发烧状态下打的，这个结果还是能接受的。</p><p><strong>出场后大家都说 $\rm T3$ 是赛前最后一场模拟赛的 $\rm T3$？我怎么完全没发现？</strong></p><p><strong>还是逃不过每场比赛必挂分的铁律啊！</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于我</title>
      <link href="/2024/01/20/%E5%85%B3%E4%BA%8E%E6%88%91/"/>
      <url>/2024/01/20/%E5%85%B3%E4%BA%8E%E6%88%91/</url>
      
        <content type="html"><![CDATA[<p>$\text{from}$ $\text{ZJ-SX}$，菜寄高一 $\text{OIer}$。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
